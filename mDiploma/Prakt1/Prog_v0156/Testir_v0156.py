import random
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import sympy

# входные значения
INPUT_DIM1=2 # 2 признака
# переход на H1 множества
OUT_DIM1=5 # 5 классов
# переход в t1
H_DIM1=5
#вход H2 правила
INPUT_DIM2=5
#переход в t3
H_DIM2=3
#переход в t4
H_DIM3=3    
  

def sigmoid(t):
    return 1/(1+np.exp(-t))

def softmax(t):
    out=np.exp(t)
    return out/np.sum(out)


def predict(a,b):
    x=np.array([[a,b]])
    print('На вход подали Х= ',x)
    if (7<=a<15)and(0<=b<7): 
        W1= np.array(
        [[ 0.05758244, -0.24294934,  0.50802252, -0.4629538,   0.3250424 ],
         [ 0.54110185,  0.36099412,  0.19723815,  0.38440376,  0.22627203]] )
        W2= np.array(
        [[-0.2458313,  -0.26965145, -0.19437733, -0.201507,    0.03941871],
         [-0.3094756,  -0.13350397, -0.31255885,  0.12624982, -0.35595031],
         [-0.24160966,  0.25497707,  0.3176049,   0.01400221, -0.09344925],
         [-0.29756503, -0.35971494,  0.05419167, -0.16669972,  0.01868881],
         [ 0.18035462,  0.01154332, -0.26388338, -0.10763047,  0.11915559]] )
        b1= np.array(
        [[-0.4339856,   0.24580745, -0.12014778,  0.13865826, -0.45316578]] )
        b2= np.array(
        [[-0.01177475,  0.2959557,  -0.07506626, -0.0143963,   0.4229846 ]] )
        W3= np.array(
        [[-0.05782501,  0.40365145,  0.34049065],
         [-0.6063102,  0.22705348, -0.0192033 ],
         [-0.40249886,  0.03708235, -0.33113302],
         [ 0.253758,   -0.03938694, -0.15384602],
         [ 0.23368066,  0.29310095,  0.04631742]] )
        b3= np.array(
        [[ 0.28355714,  0.19005035, -0.21046729]] )
        W4= np.array(
        [[-0.43190884, -0.0699922,  -0.12495689],
         [-0.85559951, -0.20381083, -0.40315538],
         [-0.69806226, -0.35118552, -0.64296487],
         [-0.19276551, -0.40954726, -0.50665277],
         [-0.20909007, -0.15172207, -0.35326852]] )
        b4= np.array(
        [[-0.17397292, -0.22463654, -0.55426221]] )

    if (0<=a<7)and(7<=b<10):
        W1= np.array(
        [[ 0.0565349,  -0.24999084,  0.50972381, -0.47071551,  0.32493369],
         [ 0.53792278,  0.34407405,  0.20629734,  0.36702629,  0.22613637]] )
        W2= np.array(
        [[-0.22634316, -0.22587415, -0.16430442, -0.20506098,  0.0541091 ],
         [-0.29149483, -0.09309251, -0.28479978,  0.12298367, -0.3423776 ],
         [-0.22329789,  0.29611408,  0.34585621, 0.01059765, -0.07969867],
         [-0.28098685, -0.3224237,   0.07980616, -0.16968018,  0.03124089],
         [ 0.19789899,  0.0509553, -0.2368166, -0.11089118,  0.13233041]] )
        b1= np.array(
        [[-0.43440681,  0.24356995, -0.11896568,  0.13636387, -0.45318476]] )
        b2= np.array(
        [[ 0.00814357,  0.34069739, -0.04433018, -0.01802621, 0.43800066]] )
        W3= np.array(
        [[-0.42859094,  0.45672785,  0.20684247],
         [-1.3163683,   0.24301815, -0.37815718],
         [-0.98341234, -0.08027863, -0.85125166],
         [ 0.034012,   -0.19417511, -0.57776703],
         [-0.02322922,  0.36790976, -0.2857196 ]] )
        b3= np.array(
        [[-0.0351645,   0.36306843, -0.75083133]] )
        W4= np.array(
        [[-0.47879695,  0.01444772, -0.1625087 ],
         [-0.92951156, -0.07068921, -0.46236495],
         [-0.75961756, -0.24032985, -0.69226523],
         [-0.25596337, -0.29577104, -0.55723112],
         [-0.29236709, -0.00177563, -0.41993795]] )
        b4= np.array(
        [[-0.32512898,  0.04749858, -0.67524127]] )


    if (0<=a<7)and(10<=b<20):
        W1= np.array(
        [[ 0.14806932, -0.16855751, -0.02086382, -0.09069049,  0.68969539],
         [-0.27345434,  0.20964029, -0.07806344, -0.69130745,  0.24708809]] )
        W2= np.array(
        [[-0.35269296, -0.18882654,  0.05392363,  0.16684891,  0.26755589],
         [-0.33157248,  0.00589183, -0.35443224,  0.40111151, -0.30928873],
         [ 0.02058161,  0.20807823, -0.03243768 -0.09880166, -0.27314611],
         [-0.3643074,   0.14139252,  0.39054146, -0.37283428,  0.09550551],
         [-0.2029891,  0.0906134,   0.23121937,  0.12954527,  0.21771391]] )
        b1= np.array(
        [[ 0.21362894, -0.3699148,  -0.20920841, -0.23814665, -0.38539671]] )
        b2= np.array(
        [[ 0.25406124,  0.206754,   -0.21580008, -0.09898923, -0.05956696]] )
        W3= np.array(
        [[-0.4600968,  -1.1058098,  -0.58065395],
         [-0.54201357, -0.8180582,  -0.25435496],
         [-0.58488476, -0.15433239,  0.04020152],
         [-0.67522023, -1.10214267,  0.16183914],
         [-0.58635942, -0.78821499, -0.62938794]] )
        b3= np.array(
        [[-1.13179349, -0.31229135,  0.54367663]] )
        W4= np.array(
        [[-0.5255872,  -0.86708978, -0.52855339],
         [-0.57392224, -0.72100259, -0.34594501],
         [-0.59331524, -0.36790575, -0.19735449],
         [-0.64318384, -0.86969722, -0.12856677],
         [-0.59655005, -0.70449276, -0.54505814]] )
        b4= np.array(
        [[-0.90437673, -0.47555493,  0.1152503 ]] )


    if (5<=b<10)and(10<=a<20):
        W1= np.array(
        [[ 0.14525327, -0.178789,   -0.0189576,  -0.09041692,  0.68969055],
         [-0.2749072,   0.20415322, -0.07709876, -0.69118501,  0.2470851 ]])
        W2= np.array(
        [[-0.35494742, -0.19346183,  0.04981867,  0.15397871,  0.26764608],
         [-0.33251212,  0.00400512, -0.35610659,  0.39598803, -0.3093178 ],
         [ 0.01949128,  0.20585066, -0.03441202, -0.10495116, -0.27312345],
         [-0.36432148,  0.14136338,  0.39051564, -0.37291568,  0.09550634],
         [-0.20694693,  0.08253953,  0.2240638,   0.10728929,  0.21777836]] )
        b1= np.array(
        [[ 0.21340676, -0.37074821, -0.20905919, -0.2381254,  -0.38539716]] )
        b2= np.array(
        [[ 0.25010296,  0.19867926 -0.22295642, -0.12124755, -0.05950254]] )
        W3= np.array(
        [[-0.19305598, -0.67040932, -0.36090468],
         [-0.24792476, -0.44777211 -0.13111234],
         [-0.28377538,  0.04347899,  0.09739699],
         [-0.34855988, -0.66135295,  0.18228402],
         [-0.28182278, -0.42640996, -0.40960116]] )
        b3= np.array(
        [[-0.66428521, -0.0405775,   0.41150156]] )
        W4= np.array(
        [[-0.49469861, -0.83164883, -0.59488294],
         [-0.5349287,  -0.6762638,  -0.42967734],
         [-0.55934099, -0.32891673, -0.27031776],
         [-0.60550437, -0.8264681,  -0.20947536],
         [-0.55876799, -0.6611305,  -0.62620245]] )
        b4= np.array(
        [[-0.83458479, -0.39547204, -0.03462454]] )


    if (0<=b<7)and(0<=a<7):
        W1= np.array(
        [[ 0.03955783,  0.3915186,  0.01510214,  0.38887458, -0.30790264],
         [-0.02262517, -0.68526004, -0.61870806, -0.61510088, -0.53629311]] )
        W2= np.array(
        [[-0.09889979, -0.03117634, 0.11125086, -0.39702892, -0.43856178],
         [ 0.2700019,   0.0379605,  -0.0790478,  -0.30691702, -0.1931405 ],
         [-0.03591845,  0.14033134, -0.11216789, -0.32536333,  0.38986606],
         [ 0.27509032, -0.22968549,  0.04183833, -0.25325974, -0.22682935],
         [ 0.25700461,  0.18903151,  0.1125361,  -0.03727154, -0.44394316]] )
        b1= np.array(
        [[ 0.16142135,  0.41527429, -0.4054859, -0.31508822,  0.10822738]] )
        b2= np.array(
        [[ 0.10924397, -0.42884496, -0.34434998,  0.26907721, -0.27118159]] )
        W3= np.array(
        [[ 0.3865532,  -0.33116276, -0.77893916],
         [-0.67435746, -0.46209347, -0.94906754],
         [ 0.16237929, -0.86889487, -0.97121176],
         [-0.37519472,  0.24406595, -0.84416191],
         [-0.38823224, -0.32206571,  0.08308934]] )
        b3= np.array(
        [[ 0.13461442, -0.90507802, -0.15907152]] )
        W4= np.array(
        [[-0.01764929, -0.49069536, -0.74222127],
         [-0.6288815,  -0.55700728, -0.83067473],
         [-0.15662144, -0.78663786, -0.84395476],
         [-0.45737909, -0.16148632, -0.77328496],
         [-0.47284265, -0.47579474, -0.24774504]] )
        b4= np.array(
        [[-0.12538197, -0.830574,   -0.41046061]] )
    #Forward
    t1= x@W1 + b1
    h1= sigmoid(t1)
    t2= h1@W2 + b2
    h2= sigmoid(t2)
    t4= h2@W4 + b4
    h4=softmax(t4)
    t3= h2@W3 + b3
    z=softmax(t3)
    return z
    
class_names=['1) Т_ц=60сек, t_з=30сек','2) Т_ц=120сек, t_з=60сек','3) Т_ц=240сек, t_з=120сек']

probs= predict(9,5)
pred_class= np.argmax(probs)
print('Pred_class= ',pred_class)
print('PREDICT светофор ',class_names[pred_class])

probs= predict(4,3)
pred_class= np.argmax(probs)
print('Pred_class= ',pred_class)
print('PREDICT светофор ',class_names[pred_class])

probs= predict(5,7)
pred_class= np.argmax(probs)
print('Pred_class= ',pred_class)
print('PREDICT светофор ',class_names[pred_class])

